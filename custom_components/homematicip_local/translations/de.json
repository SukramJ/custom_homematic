{
  "config": {
    "abort": {},
    "error": {
      "cannot_connect": "Verbindung fehlgeschlagen. Weitere Details finden Sie im HA-Protokoll.",
      "invalid_auth": "Ung\u00fcltige Authentifizierung",
      "invalid_config": "Ung\u00fcltiges Konfiguration: {invalid_items}",
      "unknown": "Unerwarteter Fehler"
    },
    "flow_title": "{name}/{host}",
    "step": {
      "central": {
        "data": {
          "callback_host": "Callback Hostname/IP-Adresse",
          "callback_port": "Callback XML-RPC Port",
          "enable_system_notifications": "aktiviere Systembenachrichtigungen",
          "host": "CCU Hostname/IP-Adresse",
          "instance_name": "Instanzname der Integration",
          "json_port": "JSON-RPC Port",
          "password": "CCU Passwort",
          "sysvar_scan_enabled": "aktiviere Sysvar Scan",
          "sysvar_scan_interval": "Sysvar/Program Scan Interval",
          "tls": "verwende TLS",
          "username": "CCU Benutzername",
          "verify_tls": "TLS Verbindung überprüfen"
        },
        "data_description": {
          "instance_name": "Name der HA-Instanz.\n Wenn von mehreren HA-Installationen aus eine Verbindung mit derselben CCU-Instanz herstellt werden soll, muss dieser Instanzname auf jeder HA-Instanz eindeutig sein.",
          "password": "Groß-/Kleinschreibung beachten. Erlaubte Zeichen: A-Z, a-z, 0-9 und .!$():;#-",
          "username": "Groß-/Kleinschreibung beachten. Benutzer muss die Administratorrolle haben."
        },
        "description": "Bitte Pflichtfelder ausfüllen"
      },
      "interface": {
        "data": {
          "bidcos_rf_enabled": "aktiviere Homematic (Bidcos-RF)",
          "bidcos_rf_port": "HM-RF Port",
          "bidcos_wired_enabled": "aktiviere Homematic-Wired (BidCos-Wired)",
          "bidcos_wired_port": "BidCos-Wired Port",
          "hmip_rf_enabled": "aktiviere Homematic IP",
          "hmip_rf_port": "HmIP-RF Port",
          "virtual_devices_enabled": "aktiviere Heizgruppen",
          "virtual_devices_path": "Gruppen Path",
          "virtual_devices_port": "Gruppen Port"
        },
        "description": "Konfiguration der CCU Schnittstellen"
      }
    }
  },
  "device_automation": {
    "action_type": {
      "press_long": "Langer Tastendruck auf Taster \"{subtype}\"",
      "press_short": "Kurzer Tastendruck auf Taster \"{subtype}\""
    },
    "trigger_type": {
      "press": "Taste \"{subtype}\" wurde gedrückt",
      "press_cont": "Taste \"{subtype}\" wird dauerhaft gedrückt",
      "press_lock": "Sperrtaste \"{subtype}\" wurde gedrückt",
      "press_long": "Taste \"{subtype}\" wurde lange gedrückt",
      "press_long_release": "Taste \"{subtype}\" wurde nach langem Tastendruck los gelassen",
      "press_long_start": "Taste \"{subtype}\" hat langem Tastendruck gestartet",
      "press_short": "Taster \"{subtype}\" wurde gedrückt",
      "press_unlock": "Entsperrtaste \"{subtype}\" wurde gedrückt"
    }
  },
  "entity": {
    "binary_sensor": {
      "acoustic_alarm_active": {
        "name": "Akustischer Alarm aktiv"
      },
      "alarmstate": {
        "name": "Alarmzustand"
      },
      "blocked_permanent": {
        "name": "Dauerhaft gesperrt"
      },
      "blocked_temporary": {
        "name": "Vorübergehend gesperrt"
      },
      "burst_limit_warning": {
        "name": "Burst-Limit-Warnung"
      },
      "current_passage_direction": {
        "name": "Durchgangsrichtung"
      },
      "dew_point_alarm": {
        "name": "Taupunktalarm"
      },
      "duty_cycle": {
        "name": "Duty Cycle"
      },
      "dutycycle": {
        "name": "Duty Cycle"
      },
      "emergency_operation": {
        "name": "Notfallbetrieb"
      },
      "error_jammed": {
        "name": "Blockiert"
      },
      "heater_state": {
        "name": "Heizungszustand"
      },
      "humidity_alarm": {
        "name": "Feuchtigkeitsalarm"
      },
      "last_passage_direction": {
        "name": "Letzte Durchgangsrichtung"
      },
      "low_bat": {
        "name": "Batterie"
      },
      "lowbat": {
        "name": "Batterie"
      },
      "lowbat_sensor": {
        "name": "Batterie"
      },
      "moisture_detected": {
        "name": "Feuchtigkeit erkannt"
      },
      "motion": {
        "name": "Bewegung"
      },
      "optical_alarm_active": {
        "name": "Optischer Alarm aktiv"
      },
      "power_mains_failure": {
        "name": "Stromnetzausfall"
      },
      "presence_detection_state": {
        "name": "Anwesenheit"
      },
      "process": {
        "name": "Arbeitet"
      },
      "raining": {
        "name": "Regen"
      },
      "sabotage": {
        "name": "Sabotage"
      },
      "sabotage_sticky": {
        "name": "Sabotage festgesetzt"
      },
      "state": {
        "name": ""
      },
      "user_authorization_01": {
        "name": "Benutzerautorisierung 1"
      },
      "user_authorization_02": {
        "name": "Benutzerautorisierung 2"
      },
      "user_authorization_03": {
        "name": "Benutzerautorisierung 3"
      },
      "user_authorization_04": {
        "name": "Benutzerautorisierung 4"
      },
      "user_authorization_05": {
        "name": "Benutzerautorisierung 5"
      },
      "user_authorization_06": {
        "name": "Benutzerautorisierung 6"
      },
      "user_authorization_07": {
        "name": "Benutzerautorisierung 7"
      },
      "user_authorization_08": {
        "name": "Benutzerautorisierung 8"
      },
      "waterlevel_detected": {
        "name": "Wasserstand erkannt"
      },
      "window_state": {
        "name": "Fensterzustand"
      },
      "working": {
        "name": "Arbeitet"
      }
    },
    "button": {
      "reset_motion": {
        "name": "Bewegung zurücksetzen"
      },
      "reset_presence": {
        "name": "Anwesenheit zurücksetzen"
      }
    },
    "climate": {
      "hmip_climate": {
        "state_attributes": {
          "preset_mode": {
            "state": {
              "week_program_1": "WP 1",
              "week_program_2": "WP 2",
              "week_program_3": "WP 3",
              "week_program_4": "WP 4",
              "week_program_5": "WP 5",
              "week_program_6": "WP 6"
            }
          }
        }
      }
    },
    "event": {
      "homematic_keypress": {
        "state_attributes": {
          "event_type": {
            "state": {
              "press": "Gedrückt",
              "press_cont": "Dauerhaft gedrückt",
              "press_lock": "Sperrtaste gedrückt",
              "press_long": "Lange gedrückt",
              "press_long_release": "Nach langem Tastendruck los gelassen",
              "press_long_start": "Langer Tastendruck gestartet",
              "press_short": "Kurz gedrückt",
              "press_unlock": "Entsperrtaste gedrückt"
            }
          }
        }
      }
    },
    "number": {
      "frequency": {
        "name": "Frequenz"
      },
      "level": {
        "name": "Level"
      },
      "level_2": {
        "name": "Level 2"
      }
    },
    "sensor": {
      "activity_state": {
        "name": "Aktivitätszustand"
      },
      "actual_humidity": {
        "name": "Luftfeuchtigkeit"
      },
      "actual_temperature": {
        "name": "Temperatur"
      },
      "air_pressure": {
        "name": "Luftdruck"
      },
      "average_illumination": {
        "name": "Durchschnittliche Beleuchtungsstärke"
      },
      "battery_state": {
        "name": "Batteriezustand"
      },
      "brightness": {
        "name": "Helligkeit"
      },
      "carrier_sense_level": {
        "name": "Carrier Sense Level"
      },
      "color": {
        "name": "Farbe"
      },
      "concentration": {
        "name": "Konzentration"
      },
      "current": {
        "name": "Strom"
      },
      "current_illumination": {
        "name": "Beleuchtungsstärke"
      },
      "dewpoint": {
        "name": "Taupunkt"
      },
      "direction": {
        "name": "Richtung",
        "state": {
          "down": "Runter",
          "none": "",
          "undefined": "Nicht definiert",
          "up": "Hoch"
        }
      },
      "door_state": {
        "name": "Türzustand",
        "state": {
          "closed": "Geschlossen",
          "open": "Offen",
          "position_unknown": "Position unbekannt",
          "ventilation_position": "Belüftung"
        }
      },
      "duty_cycle_level": {
        "name": "Duty Cycle Level"
      },
      "energy_counter": {
        "name": "Energiezähler"
      },
      "error": {
        "name": "Fehler"
      },
      "filling_level": {
        "name": "Füllstand"
      },
      "frequency": {
        "name": "Frequenz"
      },
      "gas_flow": {
        "name": "Gas-Fluss"
      },
      "gas_energy_counter": {
        "name": "Gas-Energiezähler"
      },
      "gas_power": {
        "name": "Gas-Leistung"
      },
      "gas_volume": {
        "name": "Gas-Volumen"
      },
      "highest_illumination": {
        "name": "Höchste Beleuchtungsstärke"
      },
      "humidity": {
        "name": "Luftfeuchtigkeit"
      },
      "iec_energy_counter": {
        "name": "IEC Energiezähler"
      },
      "iec_power": {
        "name": "IEC Leistung"
      },
      "illumination": {
        "name": "Beleuchtungsstärke"
      },
      "ip_address": {
        "name": "IP Adresse"
      },
      "level": {
        "name": "Level"
      },
      "level_2": {
        "name": "Level 2"
      },
      "lock_state": {
        "name": "Schliesszustand",
        "state": {
          "locked": "Verriegelt",
          "unknown": "Unbekannt",
          "unlocked": "Unverriegelt"
        }
      },
      "lowest_illumination": {
        "name": "Niedrigste Beleuchtungsstärke"
      },
      "lux": {
        "name": "Lux"
      },
      "mass_concentration_pm_1": {
        "name": "Masse-Konzentration PM 1"
      },
      "mass_concentration_pm_10": {
        "name": "Masse-Konzentration PM 10"
      },
      "mass_concentration_pm_10_24h_average": {
        "name": "Masse-Konzentration PM 10 24h Durchschnitt"
      },
      "mass_concentration_pm_1_24h_average": {
        "name": "Masse-Konzentration PM 1 24h Durchschnitt"
      },
      "mass_concentration_pm_2_5": {
        "name": "Masse-Konzentration PM 2.5"
      },
      "mass_concentration_pm_2_5_24h_average": {
        "name": "Masse-Konzentration PM 2.5 24h Durchschnitt"
      },
      "number_concentration_pm_1": {
        "name": "Numerische Konzentration PM 1"
      },
      "number_concentration_pm_10": {
        "name": "Numerische Konzentration PM 10"
      },
      "number_concentration_pm_2_5": {
        "name": "Numerische Konzentration PM 2.5"
      },
      "operating_voltage": {
        "name": "Betriebsspannung"
      },
      "passage_counter_value": {
        "name": "Durchgangszählerwert"
      },
      "power": {
        "name": "Leistung"
      },
      "rain_counter": {
        "name": "Regenzähler"
      },
      "rssi_device": {
        "name": "RSSI Device"
      },
      "rssi_peer": {
        "name": "RSSI Peer"
      },
      "sec_direction": {
        "name": "Richtung",
        "state": {
          "down": "Öffnend",
          "none": "",
          "undefined": "Nicht definiert",
          "up": "Schließend"
        }
      },
      "sec_key_error": {
        "name": "Fehler",
        "state": {
          "clutch_failure": "Einkuppeln fehlgeschlagen",
          "motor_aborted": "Motorlauf abgebrochen",
          "no_error": "Kein Fehler"
        }
      },
      "sec_win_error": {
        "name": "Fehler",
        "state": {
          "motor_tilt_error": "Fehler Kippantrieb",
          "motor_turn_error": "Fehler Drehantrieb",
          "no_error": "Kein Fehler"
        }
      },
      "sec_win_status": {
        "name": "",
        "state": {
          "charge": "Ladend",
          "discharge": "Versorgung durch Akku",
          "state_unknown": "Zustand unbekannt",
          "trickle_charge": "Erhaltungsladung"
        }
      },
      "smoke_detector_alarm_status": {
        "name": "Rauchmelder-Alarmstatus",
        "state": {
          "idle_off": "Untätig",
          "intrusion_alarm": "Einbruch-Alarm",
          "primary_alarm": "Primär-Alarm",
          "secondary_alarm": "Sekundär-Alarm"
        }
      },
      "srh_state": {
        "name": "",
        "state": {
          "closed": "Geschlossen",
          "open": "Offen",
          "tilted": "Gekippt"
        }
      },
      "state": {
        "name": ""
      },
      "status": {
        "name": ""
      },
      "sunshineduration": {
        "name": "Sonnenscheindauer"
      },
      "taupunkt": {
        "name": "Taupunkt"
      },
      "temperature": {
        "name": "Temperatur"
      },
      "typical_particle_size": {
        "name": "Tyische Partikelgröße"
      },
      "value": {
        "name": "Wert"
      },
      "valve_state": {
        "name": "Ventilzustand"
      },
      "vapor_concentration": {
        "name": "Dampfkonzentration"
      },
      "voltage": {
        "name": "Spannung"
      },
      "wind_dir": {
        "name": "Windrichtung"
      },
      "wind_dir_range": {
        "name": "Windrichtungsbereich"
      },
      "wind_direction": {
        "name": "Windrichtung"
      },
      "wind_direction_range": {
        "name": "Windrichtungsbereich"
      },
      "wind_speed": {
        "name": "Windgeschwindigkeit"
      },
      "wkp_code_state": {
        "name": "Code Status",
        "state": {
          "idle": "Leerlauf",
          "known_code_id_received": "Bekannte Code-ID erhalten",
          "unknown_code_detected": "Unbekannter Code erkannt"
        }
      }
    },
    "switch": {
      "inhibit": {
        "name": "Sperre"
      },
      "motion_detection_active": {
        "name": "Bewegungserkennung aktiv"
      },
      "presence_detection_active": {
        "name": "Anwesenheitserkennung aktiv"
      },
      "state": {
        "name": ""
      }
    }
  },
  "issues": {
    "interface_not_reachable": {
      "description": "Keine Verbindung zu Schnittstelle {interface_id}.\n\nDiese Integration versucht eine automatische Wiederverbindung.\n\nWeitere Informationen finden Sie in den Protokolldateien von Home Assistant.",
      "title": "Interface {interface_id} nicht erreichbar."
    },
    "pending_pong_mismatch": {
      "description": "Es besteht eine Differenz zwischen gesendeten Ping-Ereignissen und empfangenen Pong-Ereignissen für die HA-Instanz {instance_name}.\n\nMögliche Gründe:\n - Sie führen mehrere Instanzen von HA mit demselben Instanznamen aus, der für diese Integration konfiguriert ist. Fügen Sie eine Instanz erneut hinzu! Andernfalls empfängt diese HA-Instanz keine Aktualisierungsereignisse von Ihrer CCU.\n - Etwas hängt in der CCU oder wurde nicht bereinigt, also versuchen Sie einen CCU Neustart.\n - Ihr Setup ist falsch konfiguriert und HA kann keine Ereignisse von der CCU empfangen.",
      "title": "Austehende Pong Ereignisse auf Interface {interface_id}."
    },
    "xmlrpc_server_receives_no_events": {
      "description": "Callback für {interface_id} hat keine Ereignisse in den letzten {seconds_since_last_event}s empfangen.\n\nDiese Integration versucht eine automatische Wiederverbindung.",
      "title": "XmlRPC-Server empfängt keine Ereignisse."
    }
  },
  "options": {
    "abort": {},
    "error": {
      "cannot_connect": "Verbindung fehlgeschlagen. Weitere Details finden Sie im HA-Protokoll.",
      "invalid_auth": "Ung\u00fcltige Authentifizierung",
      "invalid_config": "Ung\u00fcltige Konfiguration: {invalid_items}",
      "unknown": "Unerwarteter Fehler"
    },
    "step": {
      "central": {
        "data": {
          "callback_host": "Callback Hostname/IP-Adresse",
          "callback_port": "Callback XML-RPC Port",
          "enable_system_notifications": "aktiviere Systembenachrichtigungen",
          "host": "CCU Hostname/IP-Adresse",
          "json_port": "JSON-RPC Port",
          "password": "CCU Passwort",
          "sysvar_scan_enabled": "aktiviere Sysvar Scan",
          "sysvar_scan_interval": "Sysvar/Program Scan Interval",
          "tls": "verwende TLS",
          "username": "CCU Benutzername",
          "verify_tls": "TLS Verbindung überprüfen"
        },
        "data_description": {
          "password": "Groß-/Kleinschreibung beachten. Erlaubte Zeichen: A-Z, a-z, 0-9 und .!$():;#-",
          "username": "Groß-/Kleinschreibung beachten. Benutzer muss die Administratorrolle haben."
        },
        "description": "Neu-Konfiguration der CCU"
      },
      "interface": {
        "data": {
          "bidcos_rf_enabled": "aktiviere Homematic (Bidcos-RF)",
          "bidcos_rf_port": "HM-RF Port",
          "bidcos_wired_enabled": "aktiviere Homematic-Wired (BidCos-Wired)",
          "bidcos_wired_port": "BidCos-Wired Port",
          "hmip_rf_enabled": "aktiviere Homematic IP",
          "hmip_rf_port": "HmIP-RF Port",
          "virtual_devices_enabled": "aktiviere Heizgruppen",
          "virtual_devices_path": "Gruppen Pfad",
          "virtual_devices_port": "Gruppen Port"
        },
        "description": "Neu-Konfiguration der CCU Schnittstellen"
      }
    }
  },
  "services": {
    "clear_cache": {
      "description": "Löscht den Cache. Benötigt einen Neustart.",
      "fields": {
        "entry_id": {
          "description": "Name der Homematic Zentrale, deren Cache gelöscht werden soll.",
          "name": "Zentrale"
        }
      },
      "name": "Lösche den Cache"
    },
    "delete_device": {
      "description": "Löscht ein Gerät aus Home-Assistant, aber nicht aus der Zentrale.",
      "fields": {
        "device_id": {
          "description": "Wähle ein Gerät.",
          "name": "Gerät"
        }
      },
      "name": "Lösche eine Gerät"
    },
    "disable_away_mode": {
      "description": "Deaktiviert den Klima-Abwesenheitsmodus.",
      "name": "Deaktiviert den Klima-Abwesenheitsmodus"
    },
    "enable_away_mode_by_calendar": {
      "description": "Aktiviert den Klima-Abwesenheitsmodus per Kalender.",
      "fields": {
        "away_temperature": {
          "description": "Die Temperatur für den Abwesenheitsmodus.",
          "name": "Solltemperatur"
        },
        "end": {
          "description": "Der Zeitpunkt, zu dem der Abwesenheitsmodus automatisch deaktiviert werden soll.",
          "name": "Endzeit"
        },
        "start": {
          "description": "Der Zeitpunkt, zu dem der Abwesenheitsmodus automatisch aktiviert werden soll.",
          "name": "Startzeit"
        }
      },
      "name": "Aktiviert den Klima-Abwesenheitsmodus per Kalender"
    },
    "enable_away_mode_by_duration": {
      "description": "Aktiviert den Klima-Abwesenheitsmodus nach Dauer.",
      "fields": {
        "away_temperature": {
          "description": "Die Temperatur für den Abwesenheitsmodus.",
          "name": "Solltemperatur"
        },
        "hours": {
          "description": "Die Anzahl der Stunden nach dem der Abwesenheitsmodus automatisch deaktiviert wird.",
          "name": "Stunde"
        }
      },
      "name": "Aktiviert den Klima-Abwesenheitsmodus nach Dauer"
    },
    "export_device_definition": {
      "description": "Exportiert die Beschreibungen eines Gerätes nach 'Dein Home-Assistant Konfigurationsverzeichnis'/homematicip_local/export*.",
      "fields": {
        "device_id": {
          "description": "Wähle ein Gerät.",
          "name": "Gerät"
        }
      },
      "name": "Exportiere Geräte-Beschreibungen"
    },
    "fetch_system_variables": {
      "description": "Ruft die Systemvariablen von einer Zentrale ab.",
      "fields": {
        "entry_id": {
          "description": "Name der Homematic-Zentrale, von der Systemvariablen abgerufen werden sollen.",
          "name": "Zentrale"
        }
      },
      "name": "Rufe Systemvariablen ab"
    },
    "force_device_availability": {
      "description": "Erzwingt die Verfügbarkeit eines Geräts. Dadurch wird der tatsächliche Status überschrieben.",
      "fields": {
        "device_address": {
          "description": "Geben Sie eine Geräteadresse ein.",
          "name": "Geräteadresse"
        },
        "device_id": {
          "description": "Wähle ein Gerät.",
          "name": "Gerät"
        }
      },
      "name": "Geräteverfügbarkeit erzwingen"
    },
    "get_device_value": {
      "description": "Ruft einen Gerätewert über die RPC-XML-Schnittstelle ab.",
      "fields": {
        "channel": {
          "description": "Kanal zum Abruf eines Parameters.",
          "name": "Kanal"
        },
        "device_address": {
          "description": "Geben Sie eine Homemativ Geräteadresse ein.",
          "name": "Geräteadresse"
        },
        "device_id": {
          "description": "Wähle ein Gerät.",
          "name": "Gerät"
        },
        "parameter": {
          "description": "Abzurufender Parameter, z. B. STATE.",
          "name": "Parameter"
        }
      },
      "name": "Gerätewert abrufen"
    },
    "get_paramset": {
      "description": "Abruf von getParamset in der RPC-XML-Schnittstelle.",
      "fields": {
        "channel": {
          "description": "Kanal zum Abruf eines Parametersatzes.",
          "name": "Kanal"
        },
        "device_address": {
          "description": "Geben Sie eine Geräteadresse ein.",
          "name": "Geräteadresse"
        },
        "device_id": {
          "description": "Wähle ein Gerät.",
          "name": "Gerät"
        },
        "paramset_key": {
          "description": "Das paramset_key-Argument für getParamset.",
          "name": "Parametersatz-Schlüssel"
        }
      },
      "name": "Parametersatz lesen"
    },
    "light_set_on_time": {
      "description": "Stellt die Einschaltdauer für ein Licht ein. Muss von einem light.turn_on gefolgt werden.",
      "fields": {
        "on_time": {
          "description": "Einschaltdauer für ein Licht in Sekunden. Verwenden Sie 0, um die Einschaltdauer zurückzusetzen.",
          "name": "Einschaltdauer"
        }
      },
      "name": "Stellt die Einschaltdauer eines Lichts ein"
    },
    "put_paramset": {
      "description": "Aufruf von putParamset auf der RPC-XML-Schnittstelle.",
      "fields": {
        "channel": {
          "description": "Kanal des Parametersatzes.",
          "name": "Kanal"
        },
        "device_address": {
          "description": "Geben Sie eine Geräteadresse ein.",
          "name": "Geräteadresse"
        },
        "device_id": {
          "description": "Wähle ein Gerät.",
          "name": "Gerät"
        },
        "paramset": {
          "description": "Ein Paramset-Wörterbuch.",
          "name": "\"Parametersatz"
        },
        "paramset_key": {
          "description": "Das paramset_key-Argument für putParamset.",
          "name": "Parametersatzschlüssel"
        },
        "wait_for_callback": {
          "description": "Warte auf die Rückmeldung von putParamset.",
          "name": "Warte auf Rückmeldung"
        },
        "rx_mode": {
          "description": "Der verwendete Empfangsmodus.",
          "name": "RX Modus"
        }
      },
      "name": "Parametersatz schreiben"
    },
    "set_cover_combined_position": {
      "description": "Bewegt eine Jalousie in eine bestimmte Position und Neigungsposition.",
      "fields": {
        "position": {
          "description": "Position der Jalousie.",
          "name": "Position"
        },
        "tilt_position": {
          "description": "Neigungsposition der Jalousie.",
          "name": "Neigungsposition"
        }
      },
      "name": "Stellt die kombinierte Position der Jalousie ein"
    },
    "set_device_value": {
      "description": "Schreibe einen Geräteparameter über die XML-RPC-Schnittstelle.",
      "fields": {
        "channel": {
          "description": "Kanal des Parameters.",
          "name": "Kanal"
        },
        "device_address": {
          "description": "Geben Sie eine Geräteadresse ein.",
          "name": "Geräteadresse"
        },
        "device_id": {
          "description": "Wähle ein Gerät.",
          "name": "Gerät"
        },
        "parameter": {
          "description": "Zu sendender Parameter, z. B. STATE.",
          "name": "Parameter"
        },
        "wait_for_callback": {
          "description": "Wait for the callback of setValue.",
          "name": "Wait for callback"
        },
        "rx_mode": {
          "description": "Der verwendete Empfangsmodus.",
          "name": "RX mode"
        },
        "value": {
          "description": "Neuer Wert.",
          "name": "Wert"
        },
        "value_type": {
          "description": "Typ des neuen Wertes.",
          "name": "Werttyp"
        }
      },
      "name": "Gerätewert schreiben"
    },
    "set_install_mode": {
      "description": "Versetzen Sie eine RPC-XML-Schnittstelle in den Installationsmodus.",
      "fields": {
        "address": {
          "description": "Adresse des Homematic-Gerätes zum anlernen.",
          "name": "Adresse"
        },
        "interface_id": {
          "description": "Wählen Sie die Schnittstelle für den Installationsmodus aus.",
          "name": "Schnittstelle"
        },
        "mode": {
          "description": "1= Normaler Modus / 2= Entfernt die vorhandenen alten Links.",
          "name": "Modus"
        },
        "time": {
          "description": "Dauer für die Ausführung im Installationsmodus.",
          "name": "Dauer"
        }
      },
      "name": "Legt den Installationsmodus fest"
    },
    "set_variable_value": {
      "description": "Schreiben Sie den Wert einer Homematic Systemvariable.",
      "fields": {
        "entry_id": {
          "description": "Name der Homematic-Zentrale, um den Wert zu schreiben.",
          "name": "Zentrale"
        },
        "name": {
          "description": "Name der zu schreibenden Variable.",
          "name": "Name"
        },
        "value": {
          "description": "Der neue Wert.",
          "name": "Wert"
        }
      },
      "name": "Variablenwert schreiben"
    },
    "switch_set_on_time": {
      "description": "Stellt die Einschaltdauer eines Schalters ein. Muss von einem switch.turn_on gefolgt werden.",
      "fields": {
        "on_time": {
          "description": "Einschaltdauer für einn Schalter in Sekunden. Verwenden Sie 0, um die Einschaltdauer zurückzusetzen.",
          "name": "Einschaltdauer"
        }
      },
      "name": "Stellt die Einschaltdauer eines Schalters ein"
    },
    "turn_on_siren": {
      "description": "Schaltet die Sirene ein.",
      "fields": {
        "duration": {
          "description": "Die Dauer in Sekunden, die die Sirene eingeschaltet wird.",
          "name": "Dauer"
        },
        "light": {
          "description": "Das Licht, das beim Einschalten der Sirene ausgestrahlt wird.",
          "name": "Licht"
        },
        "tone": {
          "description": "Der Ton, der beim Einschalten der Sirene ausgegeben wird.",
          "name": "Ton"
        }
      },
      "name": "Sirene einschalten"
    },
    "update_device_firmware_data": {
      "description": "Geräte-Firmware-Daten für alle Homematic Geräte aktualisieren.",
      "fields": {
        "entry_id": {
          "description": "Name der Homematic-Zentrale, für die die Geräte-Firmware-Daten aktualisiert werden sollen.",
          "name": "Zentrale"
        }
      },
      "name": "Aktualisiert die Firmware-Daten des Geräts"
    }
  }
}
